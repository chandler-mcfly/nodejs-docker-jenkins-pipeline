resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: buildandPush
  displayName: Build and Push image
  jobs:  
  - job: buildandPush
    displayName: Build and Push image
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub-registry-connection'
        repository: 'chandlermcfly/node'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
- stage: getArtifacts
  displayName: Get artifacts
  jobs:  
  - job: getManifests 
    displayName: Get Manifests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: deployAKS
  displayName: Deploy on AKS
  jobs:
  - job: deployService
    displayName: Deploy service
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        itemPattern: '**/*.yaml'
        targetPath: '$(System.ArtifactsDirectory)'
    - bash: ls -R $(System.ArtifactsDirectory)
    # - task: KubernetesManifest@0
    #   inputs:
    #     action: 'deploy'
    #     kubernetesServiceConnection: 'azure-kubernetes-connection'
    #     manifests: |
    #       $(System.ArtifactsDirectory)/manifests/node-deployment.yaml'
    #       $(System.ArtifactsDirectory)/manifests/node-service.yaml'
    #     containers: 'chandlermcfly/node:$(tag)'
    # - task: Kubernetes@1
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'azure-kubernetes-connection'
    #     command: 'get'
    #     arguments: 'svc,po -o wide'
    #     secretType: 'generic'